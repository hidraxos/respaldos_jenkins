<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1167.v8fe861b_09ef9">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.BooleanParameterValue>
          <name>Refresh_Param</name>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.StringParameterValue>
          <name>Archivo</name>
          <description>nombre del archivo .json con la info</description>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>File</name>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>versiones</name>
          <value></value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>Refresh_Param</string>
        <string>Archivo</string>
        <string>File</string>
        <string>versiones</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>hidraxos</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@564.ve62a_4eb_b_e039">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
  </actions>
  <queueId>74</queueId>
  <timestamp>1649093634399</timestamp>
  <startTime>1649093634531</startTime>
  <result>SUCCESS</result>
  <duration>2742</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>import groovy.transform.Field
import groovy.json.JsonSlurper
import java.io.IOException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.io.File; 

@Field def fprList = []
@Field def credentials = &quot;hidraxos_credentials&quot;
@Field def ip = &quot;192.168.1.110&quot;

node(&apos;ubuntu&apos;){
    String scriptVersion = getVersion()
    println scriptVersion
    properties([parameters([
            booleanParam(name:&apos;Refresh_Param&apos;,description: &apos;&apos;, defaultValue: false),
            stringParam(name:&apos;Archivo&apos;,description: &quot;nombre del archivo .json con la info&quot;),
            stringParam(name:&apos;File&apos;,description:&apos;&apos;),
            [$class: &apos;ChoiceParameter&apos;, choiceType: &apos;PT_SINGLE_SELECT&apos;, filterLength: 1, filterable: false, name: &apos;versiones&apos;, randomName: &apos;choice-parameter-3912475139935&apos;, script: [$class: &apos;GroovyScript&apos;, fallbackScript: [classpath: [], sandbox: false, script: &apos;&apos;], script: [classpath: [], sandbox: false, script: scriptVersion]]]
    ])])

    stage(&apos;println&apos;){
        println fprList
    }
}
def getFPRS(){
    withCredentials([usernamePassword(credentialsId: credentials, passwordVariable: &apos;PASS&apos;, usernameVariable: &apos;USER&apos;)]){
        sh&quot;&quot;&quot;
            sshpass -p ${PASS} ssh ${USER}@${ip} ls /home/hidraxos/Escritorio/Ejercicios/Groovy &gt; versiones.txt
        &quot;&quot;&quot;
    }
    fprList = readFile(&quot;versiones.txt&quot;).readLines()
}

String getVersion(){
    String script = &apos;&apos;&apos;@Library(&apos;SSHConnect&apos;) _
import java.io.*; 

trustUnknownHosts = true
remoteSession(&apos;hidraxos:galvis0425@192.168.1.110&apos;) {
  exec &apos;cd /home/hidraxos/Escritorio/Ejercicios/Groovy &amp;&amp; ls &gt; pruebaMamalona.txt&apos;
}
def file = new File(&apos;/home/hidraxos/Escritorio/Ejercicios/Groovy/pruebaMamalona.txt&apos;)
def fprList = []
    file.eachLine{line -&gt;
      fprList &lt;&lt; line
    }
println fprList
return fprList

&apos;&apos;&apos;
    return script
}

</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1580743857</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>22344251</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2433575411</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>33570472</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>425325379</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>14</iota>
    <head>1:14</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>