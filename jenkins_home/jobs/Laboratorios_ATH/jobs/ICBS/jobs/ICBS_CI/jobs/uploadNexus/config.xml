<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1186.v8def1a_5f3944">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2097.v33db_b_de764b_e"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2097.v33db_b_de764b_e">
      <jobProperties/>
      <triggers/>
      <parameters>
        <string>Version JSON</string>
        <string>Subir ZIP</string>
        <string>Subir JSON</string>
        <string>Name ZIP</string>
        <string>Version ZIP</string>
        <string>Name JSON</string>
      </parameters>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>Subir JSON</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Name ZIP</name>
          <description>Digite el nombre del ZIP</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Version ZIP</name>
          <description>Digita la version del ZIP</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>Subir ZIP</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Name JSON</name>
          <description>Digite nombre JSON</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Version JSON</name>
          <description>Release del JSON</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2725.v7b_c717eb_12ce">
    <script>import groovy.transform.Field

//------Variables Nexus---------
@Field def url_nexus = &apos;http://192.168.1.115:8081&apos;
@Field def repoNexus = &apos;maven-icbs-releases&apos;
@Field def credentialsNexus = &apos;nexus_credentials&apos;
@Field def artifactId = &quot;icbs-release-json&quot;
@Field def artifactId_zip = &quot;icbs-properties-devops&quot;


//------Variables servidor de subida

@Field def host = &apos;192.168.1.115&apos;
@Field def credentials = &apos;hidraxos_credentials&apos;
@Field def yellow = &quot;43&quot;; @Field def green = &quot;42&quot;; @Field def red = &apos;41&apos;; @Field def blue = &apos;46&apos; ; @Field def white = &quot;47&quot;

pipeline{
    agent none
    parameters { 
        booleanParam(name: &apos;Subir JSON&apos;, defaultValue: false, description: &apos;&apos;) 
        string(name: &apos;Name JSON&apos;, defaultValue: &apos;&apos;, description: &apos;Digite nombre JSON&apos;)
        string(name: &apos;Version JSON&apos;, defaultValue: &apos;&apos;, description: &apos;Release del JSON&apos;)
        booleanParam(name: &apos;Subir ZIP&apos;, defaultValue: false, description: &apos;&apos;)
        string(name: &apos;Name ZIP&apos;, defaultValue: &apos;&apos;, description: &apos;Digite el nombre del ZIP&apos;)
        string(name: &apos;Version ZIP&apos;, defaultValue: &apos;&apos;, description: &apos;Digita la version del ZIP&apos;)
        
    }
    stages{
        stage(&apos;upload&apos;){
            agent { label &apos;slave_default&apos; }
            steps{
                script{
                    if(params.&apos;Name ZIP&apos;){
                        uploadZip()
                    }
                    if(params.&apos;Name JSON&apos;){
                        uploadJson()
                    }
                }
            }
        }
    }
}
def uploadJson(){
    withCredentials([usernamePassword(credentialsId: credentials, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USERNAME&apos;)]){
        sh&quot;&quot;&quot;
             sshpass -p ${PASS} scp -o StrictHostKeyChecking=no ${USERNAME}@${host}:/home/hidraxos/Documents/${params.&apos;Name JSON&apos;} .
        &quot;&quot;&quot;
        printm(&quot;Se subira el archivo ${params.&apos;Name JSON&apos;}&quot;,blue)
    }
    withCredentials([usernamePassword(credentialsId: credentialsNexus, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USER&apos;)]){
        sh&quot;&quot;&quot;
            curl -v -u $USER:$PASS -X POST ${url_nexus}/service/rest/v1/components?repository=${repoNexus} -F maven2.groupId=com/ath/icbs -F maven2.artifactId=${artifactId} -F maven2.version=${params.&apos;Version JSON&apos;} -F &apos;maven2.asset1=@${WORKSPACE}/${params.&apos;Name JSON&apos;};type=application/json&apos; -F maven2.asset1.extension=json
        &quot;&quot;&quot;
    }   
}
def uploadZip(){
    withCredentials([usernamePassword(credentialsId: credentials, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USERNAME&apos;)]){
        sh&quot;&quot;&quot;
             sshpass -p ${PASS} scp -o StrictHostKeyChecking=no ${USERNAME}@${host}:/home/hidraxos/Documents/${params.&apos;Name ZIP&apos;} .
        &quot;&quot;&quot;
        printm(&quot;Se subira el archivo ${params.&apos;Name ZIP&apos;}&quot;,blue)
    }
    withCredentials([usernamePassword(credentialsId: credentialsNexus, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USER&apos;)]){
        sh&quot;&quot;&quot;
            curl -v -u $USER:$PASS -X POST ${url_nexus}/service/rest/v1/components?repository=${repoNexus} -F maven2.groupId=com/ath/icbs -F maven2.artifactId=${artifactId_zip} -F maven2.version=${params.&apos;Version ZIP&apos;} -F &apos;maven2.asset1=@${WORKSPACE}/${params.&apos;Name ZIP&apos;};type=application/json&apos; -F maven2.asset1.extension=zip
        &quot;&quot;&quot;
    }   
}
def printm(message,color){
    ansiColor{
        println(&quot;\033[${color}m*************** ${message} ***************\033[0m&quot;)
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>