<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1186.v8def1a_5f3944">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>hidraxos</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@593.va_a_fc25d520e9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2097.v33db_b_de764b_e">
      <stagesUUID>44afccf1-1e83-4996-847d-018076da7821</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2097.v33db_b_de764b_e">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>git push</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">if(!params.&quot;Refresh_Param&quot;){
                        Date fecha = new Date()
                        withCredentials([usernamePassword(credentialsId: credentials, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USERNAME&apos;)]){
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git status&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git add .&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git commit -am &apos;${fecha}&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git push -u origin master&apos;&quot;
                        }
                    }else{
                        printm(&apos;Refrescando parametros&apos;,blue)
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>44afccf1-1e83-4996-847d-018076da7821</uuid>
          </stages>
          <agent>
            <variables class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
              <value class="string">slave_default</value>
            </variables>
            <agentType>
              <key>label</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1129.vef26f5df883c">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2725.v7b_c717eb_12ce">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction plugin="workflow-cps@2725.v7b_c717eb_12ce">
      <interpolatedWarnings>
        <org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction_-InterpolatedWarnings>
          <stepName>sh</stepName>
          <interpolatedVariables>
            <string>PASS</string>
          </interpolatedVariables>
        </org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction_-InterpolatedWarnings>
      </interpolatedWarnings>
    </org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction>
  </actions>
  <queueId>122</queueId>
  <timestamp>1658413402053</timestamp>
  <startTime>1658413402061</startTime>
  <result>FAILURE</result>
  <duration>7026</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>import groovy.transform.Field
@Field def credentials = &apos;hidraxos_credentials&apos;
@Field def host = &apos;192.168.1.115&apos;

pipeline{
    agent {
        label &apos;slave_default&apos;
    }

    stages{
        stage(&apos;git push&apos;) {
            steps {
                script{
                    if(!params.&quot;Refresh_Param&quot;){
                        Date fecha = new Date()
                        withCredentials([usernamePassword(credentialsId: credentials, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USERNAME&apos;)]){
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git status&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git add .&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git commit -am &apos;${fecha}&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;git push -u origin master&apos;&quot;
                        }
                    }else{
                        printm(&apos;Refrescando parametros&apos;,blue)
                    }
                }
            }
        }
    }
}
def printm(message,color){
    ansiColor{
        println(&quot;\033[${color}m*************** ${message} ***************\033[0m&quot;)
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="concurrent-hash-map">
      <entry>
        <string>flowNode</string>
        <long>187108844</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>164603298</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1531330585</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>87702542</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>167003616</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>20</iota>
    <head>1:20</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>