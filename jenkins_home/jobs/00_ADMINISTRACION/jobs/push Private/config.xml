<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1186.v8def1a_5f3944">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2097.v33db_b_de764b_e"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2097.v33db_b_de764b_e">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2725.v7b_c717eb_12ce">
    <script>import groovy.transform.Field
import java.text.SimpleDateFormat;

@Field def credentials = &apos;hidraxos_credentials&apos;
@Field def host = &apos;192.168.1.115&apos;
@Field def path = &apos;/home/hidraxos/Desktop/private&apos;

pipeline{
    agent {
        label &apos;slave_default&apos;
    }

    stages{
        stage(&apos;git push&apos;) {
            steps {
                script{
                    if(!params.&quot;Refresh_Param&quot;){
                        def date = new Date()
                        def sdf = new SimpleDateFormat(&quot;MM/dd/yyyy&quot;)
                        def fecha = sdf.format(date)
                        withCredentials([usernamePassword(credentialsId: credentials, passwordVariable: &apos;PASS&apos;, usernameVariable:&apos;USERNAME&apos;)]){
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;cd ${path} &amp;&amp; git status&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;cd ${path} &amp;&amp; git add .&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;cd ${path} &amp;&amp; git commit -am ${fecha}&apos;&quot;
                            sh&quot;sshpass -p ${PASS} ssh -o StrictHostKeyChecking=no ${USERNAME}@${host} &apos;cd ${path} &amp;&amp; git push -u origin master&apos;&quot;
                        }
                    }else{
                        printm(&apos;Refrescando parametros&apos;,blue)
                    }
                }
            }
        }
    }
}
def printm(message,color){
    ansiColor{
        println(&quot;\033[${color}m*************** ${message} ***************\033[0m&quot;)
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>