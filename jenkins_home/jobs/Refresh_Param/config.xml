<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1167.v8fe861b_09ef9">
  <actions>
    <org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction plugin="workflow-multibranch@711.vdfef37cda_816">
      <jobPropertyDescriptors>
        <string>hudson.model.ParametersDefinitionProperty</string>
      </jobPropertyDescriptors>
    </org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <inheritanceStrategy class="org.jenkinsci.plugins.matrixauth.inheritance.InheritParentStrategy"/>
      <permission>USER:hudson.model.Item.Build:user</permission>
      <permission>USER:hudson.model.Item.Read:user</permission>
      <permission>USER:hudson.scm.SCM.Tag:user</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty plugin="leastload@3.0.0">
      <leastLoadDisabled>false</leastLoadDisabled>
    </org.bstick12.jenkinsci.plugins.leastload.LeastLoadDisabledProperty>
    <com.synopsys.arc.jenkinsci.plugins.jobrestrictions.jobs.JobRestrictionProperty plugin="job-restrictions@0.8"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>Refresh_Parameters</name>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition plugin="extended-choice-parameter@346.vd87693c5a_86c">
          <name>NAMES</name>
          <quoteValue>false</quoteValue>
          <saveJSONParameterToFile>false</saveJSONParameterToFile>
          <visibleItemCount>4</visibleItemCount>
          <type>PT_CHECKBOX</type>
          <multiSelectDelimiter>,</multiSelectDelimiter>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>Herman</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>Carlos</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>Beatriz</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>Gladys</name>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2659.v52d3de6044d0">
    <script>import groovy.transform.Field
import groovy.json.JsonSlurper
import java.util.*;
import java.io.*;
import org.w3c.dom.*;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.ParserConfigurationException;
import java.text.SimpleDateFormat;

@Field def names = [
    [name: &apos;Herman&apos;, Ciudad: &apos;Bogota&apos;, Carrera: &apos;Ingeniero Software&apos;,Genero:&apos;Masculino&apos;],
    [name: &apos;Carlos&apos;, Ciudad: &apos;La paz&apos;, Carrera: &apos;Ingeniero Civil&apos;,Genero:&apos;Masculino&apos;],
    [name: &apos;Beatriz&apos;, Ciudad: &apos;Melborn&apos;, Carrera: &apos;Psicologa&apos;,Genero:&apos;Femenino&apos;],
    [name: &apos;Gladys&apos;, Ciudad: &apos;Miami&apos;, Carrera: &apos;Ingeniera Industrial&apos;,Genero:&apos;Femenino&apos;]
    ]
def labelParameters = []
node(&apos;ubuntu&apos;) {
    labelParameters.add([$class: &apos;BooleanParameterDefinition&apos;, defaultValue: true, description: &apos;&apos;, name: &apos;Refresh_Parameters&apos;])
    labelParameters.add(extendedChoice(defaultValue: &apos;&apos;, description: &apos;&apos;, descriptionPropertyValue: &apos;&apos;, multiSelectDelimiter: &apos;,&apos;, name: &apos;NAMES&apos;, quoteValue: false, saveJSONParameterToFile: false, type: &apos;PT_CHECKBOX&apos;, value: &apos;&apos;, visibleItemCount: 4))
    labelParameters.add([$class: &apos;BooleanParameterDefinition&apos;, defaultValue: false,description: &apos;&apos;,name:&apos;Herman&apos;])
    labelParameters.add([$class: &apos;BooleanParameterDefinition&apos;, defaultValue: false,description: &apos;&apos;,name:&apos;Carlos&apos;])
    labelParameters.add([$class: &apos;BooleanParameterDefinition&apos;, defaultValue: false,description: &apos;&apos;,name:&apos;Beatriz&apos;])
    labelParameters.add([$class: &apos;BooleanParameterDefinition&apos;, defaultValue: false,description: &apos;&apos;,name:&apos;Gladys&apos;])    
        properties(
			[parameters(
				labelParameters
			)]
		)
    stage(&apos;Preparation&apos;) { 
        println names.size()
        if(Refresh_Parameters == &quot;false&quot;){
            for(i in names){
                def var = i.values()[0]
                if(params.&quot;$var&quot; == true){
                    println i.keySet()[0] + &quot;: &quot;+i.values()[0]+&quot;  &quot; +i.keySet()[1] + &quot;: &quot;+i.values()[1]+&quot;  &quot; +i.keySet()[2] + &quot;: &quot;+i.values()[2]
               // println i[0].get(name)
                }
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>