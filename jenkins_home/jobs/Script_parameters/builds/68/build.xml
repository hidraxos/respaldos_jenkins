<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1186.v8def1a_5f3944">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.BooleanParameterValue>
          <name>Herman</name>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Carlos</name>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Beatriz</name>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Gladys</name>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.StringParameterValue>
          <name>Other</name>
          <value>Samuel</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>Herman</string>
        <string>Carlos</string>
        <string>Beatriz</string>
        <string>Gladys</string>
        <string>Other</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>hidraxos</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@593.va_a_fc25d520e9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
  </actions>
  <queueId>232</queueId>
  <timestamp>1657996686794</timestamp>
  <startTime>1657996686802</startTime>
  <result>SUCCESS</result>
  <duration>2526</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>import groovy.transform.Field
import groovy.json.JsonSlurper
import java.io.IOException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.io.*;
import org.w3c.dom.*;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.ParserConfigurationException;
import groovy.json.JsonSlurper
import java.text.SimpleDateFormat;


@Field def names = [
    &apos;Herman&apos;:[22,&apos;Colombia&apos;,&apos;Masculino&apos;,&apos;Ingeniero Software&apos;,&apos;bogota&apos;],
    &apos;Carlos&apos;:[25,&apos;Bolivia&apos;,&apos;Masculino&apos;,&apos;Ingeniero civil&apos;,&apos;La paz&apos;],
    &apos;Beatriz&apos;:[31,&apos;Colombia&apos;,&apos;Femenino&apos;,&apos;Sicologa&apos;,&apos;bogota&apos;],
    &apos;Gladys&apos;:[54,&apos;Colombia&apos;,&apos;Femenino&apos;,&apos;Ingeniera Industrial&apos;,&apos;bogota&apos;],
    &apos;Samuel&apos;:[15,&apos;Peru&apos;,&apos;Masculino&apos;,&apos;Futbolista&apos;,&apos;bogota&apos;]
    ]
    
    
node(&apos;ubuntu&apos;){
    properties([parameters([
            booleanParam(defaultValue: false, description: &apos;&apos;,name: &quot;Herman&quot;),
            booleanParam(defaultValue: false, description: &apos;&apos;,name: &quot;Carlos&quot;),
            booleanParam(defaultValue: false, description: &apos;&apos;,name: &quot;Beatriz&quot;),
            booleanParam(defaultValue: false, description: &apos;&apos;,name: &quot;Gladys&quot;),
            stringParam(defaultValue: &quot;Samuel&quot;,description: &apos;&apos;,name: &quot;Other&quot;)
        ])])
    stage(&apos;imprimir&apos;){
        println params.&quot;Other&quot;
        for(i in &apos;a&apos;..&apos;h&apos;){
            println i
        }
        def n = 0
        for(componente in names.keySet()){
            if(params.&quot;$componente&quot; == true){
                println &quot;Nombre: &quot;+componente + &quot;  Edad: &quot;+ names.values()[n][0]+ &quot;  Carrera: &quot;+ names.values()[n][3]
                //validateAge()
            }
            if(n == 4 &amp;&amp; params.&quot;Other&quot; == &apos;Samuel&apos;){
                println &quot;Nombre: &quot;+componente + &quot;  Edad: &quot;+ names.values()[n][0] + &quot;  Carrera: &quot;+ names.values()[n][3]
            }
            n++
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="concurrent-hash-map">
      <entry>
        <string>flowNode</string>
        <long>317437250</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>1306037850</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1428937184</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>859308776</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>324231960</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>26</iota>
    <head>1:26</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>