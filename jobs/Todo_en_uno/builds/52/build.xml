<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1167.v8fe861b_09ef9">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>NAMES</name>
          <value>Herman</value>
        </hudson.model.StringParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>Refresh_Param</name>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.StringParameterValue>
          <name>Archivo</name>
          <description>nombre del archivo .json con la info</description>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>File</name>
          <value></value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>NAMES</string>
        <string>Refresh_Param</string>
        <string>Archivo</string>
        <string>File</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>hidraxos</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@564.ve62a_4eb_b_e039">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2064.v5eef7d0982b_e">
      <stagesUUID>967dc0f3-fe1e-4ab8-9c34-31a566a7fb8c</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2064.v5eef7d0982b_e">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Preparation</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">cleanWs()
                    if(!params.&quot;Refresh_param&quot;){
                        colorMessage(&quot;Iniciando pipeline TODO-EN-UNO&quot;,green)
                        texto = &quot;Hello my Name is ${params.&quot;NAMES&quot;}&quot;
                        text(texto)
                        ////fecha sdf
                        // sshpass
                        // nexus
                        //github
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Cuerpo del texto</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">if(!params.&quot;Refresh_param&quot;){
                        for (i in subject){
                            if(i.values()[0] == params.&quot;NAMES&quot;){
                                texto = &quot;I am from ${i.values()[1]}, I am  ${i.values()[2]} y and now I have ${i.values()[3]} dollars&quot;
                                text(texto)
                            }
                        }
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Comando scp</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">if(!params.&apos;Refresh_param&apos;){
                        scp()
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>967dc0f3-fe1e-4ab8-9c34-31a566a7fb8c</uuid>
          </stages>
          <postBuild>
            <conditions>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>success</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>println</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">Todo termino SUCCESS</value>
                        </value>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>failure</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>println</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">Failure</value>
                        </value>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
            </conditions>
          </postBuild>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
          <options>
            <options>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTOption>
                <name>timeout</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>unit</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">MINUTES</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>time</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="int">20</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTOption>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTOption>
                <name>ansiColor</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                    <value class="string">xterm</value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTOption>
            </options>
            <inStage>false</inStage>
          </options>
          <parameters>
            <parameters>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>choice</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">NAMES</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>choices</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$GStringValue">
                      <value class="string">${[&quot;Herman&quot;,&quot;Carlos&quot;,&quot;Beatriz&quot;,&quot;Gladys&quot;]}</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>booleanParam</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Refresh_Param</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string"></value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>defaultValue</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="boolean">false</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>string</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">Archivo</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">nombre del archivo .json con la info</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
                <name>string</name>
                <args>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>name</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string">File</value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                    <key>
                      <key>description</key>
                    </key>
                    <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                      <value class="string"></value>
                    </value>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                </args>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildParameter>
            </parameters>
          </parameters>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.1">
      <id>de53e5d6-176b-42fb-9075-011c4e655797</id>
      <colorMapName>xterm</colorMapName>
      <command>START</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.1">
      <id>538112ea-09db-420f-967f-1b9619fb4eb5</id>
      <colorMapName>xterm</colorMapName>
      <command>CURRENT</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1074.v60e6c29b_b_44b_">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2659.v52d3de6044d0">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction plugin="workflow-cps@2659.v52d3de6044d0">
      <interpolatedWarnings>
        <org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction_-InterpolatedWarnings>
          <stepName>sh</stepName>
          <interpolatedVariables>
            <string>PASSWORD</string>
            <string>USERNAME</string>
          </interpolatedVariables>
        </org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction_-InterpolatedWarnings>
      </interpolatedWarnings>
    </org.jenkinsci.plugins.workflow.cps.view.InterpolatedSecretsAction>
    <hudson.plugins.ansicolor.action.ColorizedAction plugin="ansicolor@1.0.1">
      <id>52fe1088-b77b-4149-8d83-daecf92954d5</id>
      <colorMapName>xterm</colorMapName>
      <command>STOP</command>
    </hudson.plugins.ansicolor.action.ColorizedAction>
  </actions>
  <queueId>53</queueId>
  <timestamp>1649821473242</timestamp>
  <startTime>1649821473372</startTime>
  <result>SUCCESS</result>
  <duration>15584</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>import groovy.transform.Field
import groovy.json.JsonSlurper
import java.io.IOException;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import java.io.*;
import org.w3c.dom.*;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.ParserConfigurationException;
import groovy.json.JsonSlurper
import java.text.SimpleDateFormat;

//Este pipeline busca integrar muchas de las funciones que podemos encontrar en Jenkins
//para esto vamos a crear un documento .txt en el workspace que suba un archivo a github, y al mismo tiempo descargue un json de ese mismo repo
//con las indicaciones para subir un artefacto a Nexus conectandose por ssh con una maquina Ubuntu

@Field def ip_ubuntu = &quot;192.168.1.110&quot;
@Field def credentials = &apos;hidraxos_credentials&apos;
@Field def texto
@Field def file = &quot;MyFile.txt&quot;
@Field def green = 42
@Field def yellow = 43
@Field def red = 41
@Field def email = &quot;hermanncho20@gmail.com&quot;
@Field def subject = [
    [name: &apos;Herman&apos;, Ciudad: &apos;Bogota&apos;, Carrera: &apos;Softeware Engineer&apos;,Dinero:5076],
    [name: &apos;Carlos&apos;, Ciudad: &apos;La paz&apos;, Carrera: &apos;Civil Engineer&apos;,Dinero: 6789],
    [name: &apos;Beatriz&apos;, Ciudad: &apos;Melborn&apos;, Carrera: &apos;Sicologist&apos;,Dinero: 9876],
    [name: &apos;Gladys&apos;, Ciudad: &apos;Miami&apos;, Carrera: &apos;Industrial engineer&apos;,dinero: 3678]
    ]
    
pipeline{
    agent any
    options{
        timeout(unit:&apos;MINUTES&apos;, time : 20)
        ansiColor(&quot;xterm&quot;)
    }
    parameters{
            choice(name: &apos;NAMES&apos;, choices: [&quot;Herman&quot;,&quot;Carlos&quot;,&quot;Beatriz&quot;,&quot;Gladys&quot;])
            booleanParam(name:&apos;Refresh_Param&apos;,description: &apos;&apos;, defaultValue: false)
            string(name:&apos;Archivo&apos;,description: &quot;nombre del archivo .json con la info&quot;)
            string(name:&apos;File&apos;,description:&apos;&apos;)
    }
    stages{
        stage(&apos;Preparation&apos;) { 
            steps{
                script{
                    cleanWs()
                    if(!params.&quot;Refresh_param&quot;){
                        colorMessage(&quot;Iniciando pipeline TODO-EN-UNO&quot;,green)
                        texto = &quot;Hello my Name is ${params.&quot;NAMES&quot;}&quot;
                        text(texto)
                        ////fecha sdf
                        // sshpass
                        // nexus
                        //github
                    }
                }
            }
        }
        stage(&apos;Cuerpo del texto&apos;){
            steps{
                script{
                    if(!params.&quot;Refresh_param&quot;){
                        for (i in subject){
                            if(i.values()[0] == params.&quot;NAMES&quot;){
                                texto = &quot;I am from ${i.values()[1]}, I am  ${i.values()[2]} y and now I have ${i.values()[3]} dollars&quot;
                                text(texto)
                            }
                        }
                    }
                }
            }
        }
        stage(&apos;Comando scp&apos;){
            steps{
                script{
                    if(!params.&apos;Refresh_param&apos;){
                        scp()
                    }
                }
            }
        }
    }
    post{
        success{
            println &quot;Todo termino SUCCESS&quot;
            //emailext (attachLog: true, body: &quot;Hola papu lo lograste&quot;, subject: &quot;Correo desde jenkins&quot;, to: email) Se necesita un cliente SMTP
        }
        failure{
            println &quot;Failure&quot;
        }
    }
}

def colorMessage(def message, def color){
    println &quot;\033[${color}m############ ${message} ############\033[0m&quot;
}
def text(def line){
    sh &quot;&quot;&quot;
        echo &quot;${line}\n&quot; &gt;&gt; ${file}
    &quot;&quot;&quot;
}
def scp(){
    withCredentials([usernamePassword(credentialsId: credentials, usernameVariable: &apos;USERNAME&apos;, passwordVariable: &apos;PASSWORD&apos;)]){
        sh &quot;&quot;&quot;
            sshpass -p ${PASSWORD} scp ${USERNAME}@${ip_ubuntu}:/home/hidraxos/Escritorio/borrar.groovy .
        &quot;&quot;&quot;
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>4967491806</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>3613570811</long>
      </entry>
      <entry>
        <string>run</string>
        <long>13647553741</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>656138219</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>3367126697</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>53</iota>
    <head>1:53</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>